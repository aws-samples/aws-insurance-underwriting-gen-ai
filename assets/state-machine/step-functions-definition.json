{
    "Comment": "A description of my state machine",
    "StartAt": "Base64 Image Encoding",
    "States": {
      "Base64 Image Encoding": {
        "Type": "Task",
        "Resource": "arn:aws:states:::lambda:invoke",
        "OutputPath": "$.Payload",
        "Parameters": {
          "Payload.$": "$",
          "FunctionName": ""
        },
        "Retry": [
          {
            "ErrorEquals": [
              "Lambda.ServiceException",
              "Lambda.AWSLambdaException",
              "Lambda.SdkClientException",
              "Lambda.TooManyRequestsException"
            ],
            "IntervalSeconds": 1,
            "MaxAttempts": 3,
            "BackoffRate": 2
          }
        ],
        "Next": "Classification",
        "InputPath": "$.detail"
      },
      "Classification": {
        "Type": "Task",
        "Resource": "arn:aws:states:::bedrock:invokeModel",
        "Parameters": {
          "ModelId": "",
          "Input": {
            "S3Uri": ""
          },
          "ContentType": "application/json",
          "Accept": "application/json"
        },
        "Next": "Choice (YES or NO)",
        "ResultPath": "$.result"
      },
      "Choice (YES or NO)": {
        "Type": "Choice",
        "Choices": [
          {
            "Not": {
              "Variable": "$.result.Body.content[0].text",
              "StringMatches": "YES"
            },
            "Comment": "It is not a driving license",
            "Next": "Fail"
          }
        ],
        "Default": "Parallel"
      },
      "Parallel": {
        "Type": "Parallel",
        "Next": "Generate Final Prompt",
        "Branches": [
          {
            "StartAt": "Extract Name and License #",
            "States": {
              "Extract Name and License #": {
                "Parameters": {
                  "Accept": "application/json",
                  "ContentType": "application/json",
                  "Input": {
                    "S3Uri": ""
                  },
                  "ModelId": ""
                },
                "Resource": "arn:aws:states:::bedrock:invokeModel",
                "Type": "Task",
                "Next": "Call DMV with License Info"
              },
              "Call DMV with License Info": {
                "OutputPath": "$.Payload",
                "Parameters": {
                  "FunctionName": "",
                  "Payload.$": "$"
                },
                "Resource": "arn:aws:states:::lambda:invoke",
                "Retry": [
                  {
                    "BackoffRate": 2,
                    "ErrorEquals": [
                      "Lambda.ServiceException",
                      "Lambda.AWSLambdaException",
                      "Lambda.SdkClientException",
                      "Lambda.TooManyRequestsException"
                    ],
                    "IntervalSeconds": 1,
                    "MaxAttempts": 3
                  }
                ],
                "Type": "Task",
                "End": true
              }
            }
          },
          {
            "StartAt": "Retrieve information from Underwriting Manual",
            "States": {
              "Retrieve information from Underwriting Manual": {
                "Type": "Task",
                "Parameters": {
                  "KnowledgeBaseId": "",
                  "RetrievalQuery": {
                    "Text": ""
                  }
                },
                "Resource": "arn:aws:states:::aws-sdk:bedrockagentruntime:retrieve",
                "Next": "Combine Retrieved Information"
              },
              "Combine Retrieved Information": {
                "Type": "Task",
                "Resource": "arn:aws:states:::lambda:invoke",
                "OutputPath": "$.Payload",
                "Parameters": {
                  "FunctionName": "",
                  "Payload.$": "$"
                },
                "Retry": [
                  {
                    "ErrorEquals": [
                      "Lambda.ServiceException",
                      "Lambda.AWSLambdaException",
                      "Lambda.SdkClientException",
                      "Lambda.TooManyRequestsException"
                    ],
                    "IntervalSeconds": 1,
                    "MaxAttempts": 3,
                    "BackoffRate": 2
                  }
                ],
                "End": true
              }
            }
          }
        ]
      },
      "Generate Final Prompt": {
        "Type": "Task",
        "Resource": "arn:aws:states:::lambda:invoke",
        "OutputPath": "$.Payload",
        "Parameters": {
          "Payload.$": "$",
          "FunctionName": ""
        },
        "Retry": [
          {
            "ErrorEquals": [
              "Lambda.ServiceException",
              "Lambda.AWSLambdaException",
              "Lambda.SdkClientException",
              "Lambda.TooManyRequestsException"
            ],
            "IntervalSeconds": 1,
            "MaxAttempts": 3,
            "BackoffRate": 2
          }
        ],
        "Next": "Get Final Result from Bedrock"
      },
      "Get Final Result from Bedrock": {
        "Parameters": {
          "Accept": "application/json",
          "ContentType": "application/json",
          "Input": {
            "S3Uri": ""
          },
          "ModelId": ""
        },
        "Resource": "arn:aws:states:::bedrock:invokeModel",
        "Type": "Task",
        "Next": "Success"
      },
      "Fail": {
        "Type": "Fail"
      },
      "Success": {
        "Type": "Succeed"
      }
    }
  }